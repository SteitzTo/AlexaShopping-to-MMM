[
    {
        "id": "5b659ecf053ddcb5",
        "type": "tab",
        "label": "Alexa Shoppinglist",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "cad49a51d4b6511a",
        "type": "alexa-remote-list",
        "z": "5b659ecf053ddcb5",
        "name": "",
        "account": "b3eb788434b61b34",
        "config": {
            "option": "getListItems",
            "value": {
                "list": {
                    "type": "str",
                    "value": "YW16bjEuYWNjb3VudC5BRVJLR1NETVE2VFpUQ1lBWVFTV0g3TE9HNU1BLVNIT1BQSU5HX0lURU0="
                }
            }
        },
        "x": 320,
        "y": 140,
        "wires": [
            [
                "0d8e5f6764bf12a8"
            ]
        ]
    },
    {
        "id": "8cb45371b536085f",
        "type": "inject",
        "z": "5b659ecf053ddcb5",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 140,
        "wires": [
            [
                "cad49a51d4b6511a"
            ]
        ]
    },
    {
        "id": "1d408e6875212897",
        "type": "mqtt out",
        "z": "5b659ecf053ddcb5",
        "name": "",
        "topic": "Alexa/Torsten/Einkaufsliste",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a4a3cc56ed9dd522",
        "x": 1200,
        "y": 160,
        "wires": []
    },
    {
        "id": "0d8e5f6764bf12a8",
        "type": "function",
        "z": "5b659ecf053ddcb5",
        "name": "Array fÃ¼r Einkaufslisten Items",
        "func": "let AlexaArray = msg.payload; // Array of the payload\nconst valuesArray = [];       //Array for filter\n\n// filter if Element = hooked on in list\nconst Filter1Array = AlexaArray.filter(element => {\n  return element.completed === false;\n  });\n  for (const element of Filter1Array) {\n\n}\n// extract content of Element  value in Array\nfor (let i = 0; i < Filter1Array.length; i++) {\n  if (typeof Filter1Array[i] === 'object' && Filter1Array[i].hasOwnProperty('value')) {\n     valuesArray.push(Filter1Array[i].value + (\"<br>\")); \n  }\n}\n// capitalized the first Letter\nconst capitalizedArray = valuesArray.map(word => {\n  return word.charAt(0).toUpperCase() + word.slice(1);\n});\n//format array to string\ncapitalizedArrayfertig = capitalizedArray.join(\"\");\n\nmsg.payload = capitalizedArrayfertig;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 4,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 140,
        "wires": [
            [
                "f284bfb1e9e97264"
            ]
        ]
    },
    {
        "id": "0f51029043106f91",
        "type": "template",
        "z": "5b659ecf053ddcb5",
        "name": "If list empty",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "\n<p>\n    Die Liste ist leer<br>\n</p>",
        "output": "str",
        "x": 950,
        "y": 100,
        "wires": [
            [
                "1d408e6875212897"
            ]
        ]
    },
    {
        "id": "f284bfb1e9e97264",
        "type": "switch",
        "z": "5b659ecf053ddcb5",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 790,
        "y": 140,
        "wires": [
            [
                "0f51029043106f91"
            ],
            [
                "01c9de7ebba6c1ac"
            ]
        ]
    },
    {
        "id": "01c9de7ebba6c1ac",
        "type": "function",
        "z": "5b659ecf053ddcb5",
        "name": "html: order: left",
        "func": "msg.payload = \"<p align=left>\" + msg.payload ;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 160,
        "wires": [
            [
                "1d408e6875212897"
            ]
        ]
    },
    {
        "id": "b3eb788434b61b34",
        "type": "alexa-remote-account",
        "name": "Alexa Torsten",
        "authMethod": "proxy",
        "proxyOwnIp": "192.168.2.240",
        "proxyPort": "3456",
        "cookieFile": "/home/pi/alex-cookie-torsten.txt",
        "refreshInterval": "3",
        "alexaServiceHost": "layla.amazon.de",
        "pushDispatchHost": "",
        "amazonPage": "amazon.de",
        "acceptLanguage": "de-DE",
        "onKeywordInLanguage": "an",
        "userAgent": "",
        "usePushConnection": "on",
        "autoInit": "on",
        "autoQueryActivityOnTrigger": "off"
    },
    {
        "id": "a4a3cc56ed9dd522",
        "type": "mqtt-broker",
        "name": "MQTT-Server",
        "broker": "192.168.2.2",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    }
]
